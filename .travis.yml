language: python

python:
  - "2.7"
  - "3.4"
  - "3.5"

sudo: false

cache:
  directories:
    - node_modules
    - .pip_download_cache
    - "$HOME/virtualenv/python2.7.9"

env:
  matrix:
    - DB=postgres DJANGO="Django==1.4.22"
    - DB=sqlite DJANGO="Django==1.4.22"
    - DB=postgres DJANGO="Django==1.8.14"
    - DB=sqlite DJANGO="Django==1.8.14"
    - DB=postgres DJANGO="Django==1.9.9"
    - DB=sqlite DJANGO="Django==1.9.9"
    - DB=postgres DJANGO="Django==1.10"
    - DB=sqlite DJANGO="Django==1.10"
    - 'DB=postgres DJANGO="-e git+git://github.com/django/django.git#egg=Django"'
    - 'DB=sqlite DJANGO="-e git+git://github.com/django/django.git#egg=Django"'
  global:
    - PIP_DOWNLOAD_CACHE=".pip_download_cache"

matrix:
  allow_failures:
    # - env: 'DB=mysql DJANGO="-e git+git://github.com/django/django.git#egg=Django"'
    - env: 'DB=postgres DJANGO="-e git+git://github.com/django/django.git#egg=Django"'
    - env: 'DB=sqlite DJANGO="-e git+git://github.com/django/django.git#egg=Django"'


before_script:
  - if [[ $DB = "postgres" ]]; then psql -c 'create database bitfield;' -U postgres; fi
  - if [[ $DB = "mysql" ]]; then mysql -e 'create database bitfield'; fi

install:
  - "pip install ${DJANGO}"
  - make

script:
  - make lint
  - make test

deploy:
  provider: pypi
  user: disqus
  password:
    secure: QBNCmnsH6/5/knGZbaf3FyNo+Qfqz88uZSzS8KGVsr2FPOevDq7e6Wmk/xZQmFHXaTTKXRtik+wkledWc9tPT1iTrl7zc0N8wdbOK8DbPGVoguA5RqP/toO9k3YDI1jY2nH94V/fJPkGbtWruaeDZ/WlXxA/sl5jx8K+sf14Vd4=
  on:
    tags: true
